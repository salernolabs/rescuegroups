<?php
/**
 * {{className}} {{requestName}} Request Test
 *
 * @package RescueGroups
 * @subpackage Tests
 * @author SourceGenerator
 */
namespace RescueGroups\Tests\Request\Objects\{{className}};

class {{requestClassName}}Test extends \PHPUnit\Framework\TestCase
{
    use \RescueGroups\Tests\Traits\APISetup;

    /**
     * Test Query
     */
    public function testQuery()
    {
        $this->apiLogin();

        $query = new \RescueGroups\Request\Objects\{{className}}\{{requestClassName}}();
        $query
            ->setResultStart(33)
            ->setResultLimit(123)
            ->setResultSort('testSortValue')
            ->setResultOrder('ascending')
            {{# fields}}
            ->addField('{{sdkFieldName}}')
            ->addFilter('{{sdkFieldName}}', 'equals', '{{friendlyName}}')
            {{/ fields}}
            ->setCalculateFoundRows(true);

        $data = $this->api->getPostObject($query);

        $this->assertEquals('{{typeName}}', $data['objectType']);
        $this->assertEquals('{{requestName}}', $data['objectAction']);
        $this->assertEquals(33, $data['search']->resultStart);
        $this->assertEquals(123, $data['search']->resultLimit);
        $this->assertEquals('testSortValue', $data['search']->resultSort);
        $this->assertEquals('ascending', $data['search']->resultOrder);
        $this->assertEquals('Yes', $data['search']->calcFoundRows);

        $filterTable = [
        {{# fields}}
            ['fieldName'=>'{{name}}','operation'=>'equals','criteria'=>"{{friendlyName}}"],
        {{/ fields}}
        ];

        $translatedFields = [
        {{# fields}}
            "{{name}}",
        {{/ fields}}
        ];

        $this->assertEquals($translatedFields, $data['search']->fields);
        $this->assertEquals($filterTable, $data['search']->filters);
    }
}
