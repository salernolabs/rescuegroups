<?php
/**
 * {{className}} {{requestClassName}} Request
 *
 * @package RescueGroups
 * @subpackage Request
 * @author SourceGenerator
 */
namespace RescueGroups\Request\Objects\{{className}};

class {{requestClassName}} implements \RescueGroups\Request\RequestInterface, \RescueGroups\Request\ObjectActionInterface, \RescueGroups\Request\ParametersInterface, \RescueGroups\Request\ProcessResponseInterface
{
    {{#fields}}
    /**
     * {{friendlyName}}
     *
     * @var {{type}}
     */
    private ${{parameterName}} = null;

    {{/fields}}

    {{#fields}}
    /**
     * Set {{friendlyName}}
     * @param {{type}} $value
     * @return $this
     */
    public function set{{$parameterName}}($value)
    {
        $this->{{sdkFieldName}} = $value;

        return $this;
    }

    {{/fields}}

    /**
     * @return bool
     */
    public function loginRequired()
    {
        return {{loginRequired}};
    }

    /**
     * Return the object type
     *
     * @return string
     */
    public function getObjectType()
    {
        return '{{typeName}}';
    }

    /**
     * Return the object action
     *
     * @return mixed
     */
    public function getObjectAction()
    {
        return '{{objectAction}}';
    }

    /**
     * Process the response with associated output object
     * @param \RescueGroups\API $api
     * @param \stdClass $data
     * @returns \RescueGroups\Objects\{{responseClassName}}[]
     */
    public function processResponse(\RescueGroups\API $api, $data)
    {
        if (empty($data)) return [];

        if (is_array($data) || is_object($data))
        {
            $output = [];
            foreach ($data as $object)
            {
                $output[] = new \RescueGroups\Objects\{{responseClassName}}($object);
            }

            return $output;
        }

        return [new \RescueGroups\Objects\{{responseClassName}}($data)];
    }

    /**
     * Apply request parameters to the outgoing request
     *
     * @param $parameterArray
     */
    public function applyParameters(&$parameterArray)
    {
        if (empty($parameterArray['values'])) $parameterArray['values'] = [];

        {{#fields}}
        if ($this->{{sdkFieldName}} !== null) $parameterArray['values'][] = ["{{name}}"=>$this->{{sdkFieldName}}];
        {{/fields}}
    }
}